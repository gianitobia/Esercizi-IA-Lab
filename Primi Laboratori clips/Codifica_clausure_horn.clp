(deffacts initial
	(nodo n1)
	(nodo n2)
	(nodo n3)
	(nodo n4)
	(nodo n5)
	(nodo n6)
	(nodo n7)
	(nodo n8)
	(nodo n9)
	(nodo n10)
	(nodo n11)
	(nodo n12)
	(nodo n13)
	(nodo n14)
	(nodo n15)
	(nodo n16)
	(nodo n17)
	(nodo n18)
	(nodo n19)
	(nodo n20)
	(nodo n21)
	(nodo n22)
	(nodo n23)
	(nodo n24)
	(nodo n25)
	(nodo n26)
	(nodo n27)
	(nodo n28)
	(nodo n29)
	(nodo n30)
	
	(arco n1 n2)
	(arco n1 n3)
	(arco n1 n4)
	(arco n2 n6)
	(arco n5 n7)
	(arco n6 n7)
	(arco n22 n30)
	(arco n18 n20)
	(arco n3 n24)
	(arco n5 n15)
	(arco n26 n7)
	(arco n11 n12)
	(arco n29 n30)
	(arco n28 n29)
	(arco n23 n24)
	(arco n22 n26)
	(arco n15 n17)
	(arco n16 n17)
	(arco n1 n22)
	(arco n1 n23)
	(arco n1 n24)
	(arco n12 n26)
	(arco n25 n17)
	(arco n16 n27)
	(arco n4 n22)
	(arco n4 n13)
	(arco n4 n14)
	(arco n14 n6)
	(arco n15 n7)
	(arco n26 n4)
	(arco n3 n22)
	(arco n3 n23)
	(arco n3 n24)
	(arco n8 n23)
	(arco n8 n30)
	(arco n9 n28)
)

(deffacts question
	(goal conn n6 n30)
)

(defrule r1
	(nodo ?x)
	(nodo ?z)
	(arco ?x ?z)
	=> (assert (conn ?x ?z))
)

(defrule r2
	(nodo ?x)
	(arco ?x ?z)
	(conn ?z ?y)
	=> (assert (conn ?x ?y))
)

(defrule r3
	(arco ?x ?z)
	=>(assert (arco ?z ?x))
)

(defrule end (declare (salience 1))
	(goal conn ?x ?y)
	(conn ?x ?y)
	=> (printout t "node " ?x " connected to " ?y crlf)
	(halt)
)

(defrule end (declare (salience -1))
	(goal conn ?x ?y)
	(not (conn ?x ?y))
	=> (printout t "node " ?x " not connected to " ?y crlf)
	(halt)
)

;(defrule end (declare (salience -1))
;	(not (conn n3 n6))
;	=> (printout t "node n3 not connected to n30" crlf)
;)

;(defrule end (declare (salience -1))
;	(not (conn ?x ?y))      <----- Non funziona perche` non posso usare un valore che non deve esistere
;	=> (printout t "node " ?x " not connected to " ?y crlf)
;	(halt)
;)

